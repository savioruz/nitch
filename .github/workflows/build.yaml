name: Build and Release

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Nim environment
        uses: jiro4989/setup-nim-action@v2
        with:
          nim-version: 'stable'
      
      - name: Install dependencies
        run: nimble install -y
      
      - name: Install ARM cross-compilation tools
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu
      
      - name: Extract version from tag
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
          else
            echo "VERSION=0.0.0" >> $GITHUB_OUTPUT
          fi
      
      - name: Build Debug binary
        run: nimble build
      
      - name: Build Release binary
        run: nimble build -d:release
      
      - name: Build for ARM
        run: |
          mv nitch nitch.amd64  # Save AMD64 binary
          nimble build -d:release --cpu:arm --os:linux
          mv nitch nitch.arm
          mv nitch.amd64 nitch  # Restore AMD64 binary

      - name: Build for ARM64
        run: |
          mv nitch nitch.amd64  # Save AMD64 binary
          nimble build -d:release --cpu:arm64 --os:linux
          mv nitch nitch.arm64
          mv nitch.amd64 nitch  # Restore AMD64 binary

      - name: Compress binaries
        run: |
          tar -czf "nitch-${{ steps.get_version.outputs.VERSION }}-linux-amd64.tar.gz" nitch
          sha256sum "nitch-${{ steps.get_version.outputs.VERSION }}-linux-amd64.tar.gz" > "nitch-${{ steps.get_version.outputs.VERSION }}-linux-amd64.tar.gz.sha256"

      - name: Compress ARM binary
        run: |
          mv nitch.arm nitch
          tar -czf "nitch-${{ steps.get_version.outputs.VERSION }}-linux-arm.tar.gz" nitch
          sha256sum "nitch-${{ steps.get_version.outputs.VERSION }}-linux-arm.tar.gz" > "nitch-${{ steps.get_version.outputs.VERSION }}-linux-arm.tar.gz.sha256"

      - name: Compress ARM64 binary
        run: |
          mv nitch.arm64 nitch
          tar -czf "nitch-${{ steps.get_version.outputs.VERSION }}-linux-arm64.tar.gz" nitch
          sha256sum "nitch-${{ steps.get_version.outputs.VERSION }}-linux-arm64.tar.gz" > "nitch-${{ steps.get_version.outputs.VERSION }}-linux-arm64.tar.gz.sha256"

      - name: Upload Debug Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nitch-${{ steps.get_version.outputs.VERSION }}-debug
          path: nitch
          retention-days: 7
      
      - name: Upload ARM Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nitch-${{ steps.get_version.outputs.VERSION }}-arm
          path: |
            nitch-${{ steps.get_version.outputs.VERSION }}-linux-arm.tar.gz
            nitch-${{ steps.get_version.outputs.VERSION }}-linux-arm.tar.gz.sha256
          retention-days: 30

      - name: Upload ARM64 Release Artifact
        uses: actions/upload-artifact@v4
        with:
          name: nitch-${{ steps.get_version.outputs.VERSION }}-arm64
          path: |
            nitch-${{ steps.get_version.outputs.VERSION }}-linux-arm64.tar.gz
            nitch-${{ steps.get_version.outputs.VERSION }}-linux-arm64.tar.gz.sha256
          retention-days: 30
      
      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            nitch-${{ steps.get_version.outputs.VERSION }}-linux-amd64.tar.gz
            nitch-${{ steps.get_version.outputs.VERSION }}-linux-amd64.tar.gz.sha256
            nitch-${{ steps.get_version.outputs.VERSION }}-linux-arm.tar.gz
            nitch-${{ steps.get_version.outputs.VERSION }}-linux-arm.tar.gz.sha256
            nitch-${{ steps.get_version.outputs.VERSION }}-linux-arm64.tar.gz
            nitch-${{ steps.get_version.outputs.VERSION }}-linux-arm64.tar.gz.sha256
          draft: false
          prerelease: false
